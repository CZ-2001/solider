#ifndef __JUDGE_BEHAVIOUR_
#define __JUDGE_BEHAVIOUR_
#include "main.h"
#include "sys.h"
#include "stm32f4xx.h"
#include "string.h"
#include "check_crc.h"
#define Judge_Header 0xA5

#define JudgeBufferLength 400

/*
Í¨ï¿½ï¿½Ð­ï¿½ï¿½ï¿½Ê?
frame_header (5-byte)
cmd_id (2-byte)
data (n-byte)
frame_tail (2-byteï¿½ï¿½CRC16ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð£ï¿½ï¿½)
*/
// frame_header ï¿½ï¿½Ê½Ëµï¿½ï¿½
/*
SOF   			1byte
data_length	 	2byte
seq				1byte
CRC8 		    1byte

*/
typedef __packed struct
{
	uint8_t SOF;		 // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½Ö½Ú£ï¿½ï¿½Ì¶ï¿½Îª0xA5
	uint16_t DataLength; // ï¿½ï¿½ï¿½Ý³ï¿½ï¿½ï¿½
	uint8_t Seq;		 // ï¿½ï¿½ï¿½ï¿½ï¿?
	uint8_t CRC8;		 // Ö¡Í·CRCÐ£ï¿½ï¿½
} Frame_Header_t;		 // Ö¡Í·

// cmd_id ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ID Ëµï¿½ï¿½


// cmd_id ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½Ï¸Ëµï¿½ï¿½

typedef __packed struct
{
	uint8_t game_type : 4;
	uint8_t game_progress : 4;
	uint16_t stage_remain_time;
	uint64_t SyncTimeStamp;
} ext_game_status_t;

/*
ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý£ï¿?0x0002ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½

0 Æ½ï¿½ï¿½ 1 ï¿½ì·½Ê¤ï¿½ï¿½ 2 ï¿½ï¿½ï¿½ï¿½Ê¤ï¿½ï¿½
*/
typedef __packed struct
{
	uint8_t winner;
} ext_game_result_t;

typedef __packed struct
{
	uint16_t red_1_robot_HP;
	uint16_t red_2_robot_HP;
	uint16_t red_3_robot_HP;
	uint16_t red_4_robot_HP;
	uint16_t red_5_robot_HP;
	uint16_t red_7_robot_HP;
	uint16_t red_outpost_HP;
	uint16_t red_base_HP;
	uint16_t blue_1_robot_HP;
	uint16_t blue_2_robot_HP;
	uint16_t blue_3_robot_HP;
	uint16_t blue_4_robot_HP;
	uint16_t blue_5_robot_HP;
	uint16_t blue_7_robot_HP;
	uint16_t blue_outpost_HP;
	uint16_t blue_base_HP;
} ext_game_robot_HP_t;

// ï¿½ï¿½ï¿½Ú·ï¿½ï¿½ï¿½×´Ì¬ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ID 0x0004  ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½ï¿½ï¿½ï¿½Ú·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?  ï¿½ï¿½ï¿½Í·ï¿½Î§ï¿½ï¿½ï¿½ï¿½ï¿½Ð»ï¿½ï¿½ï¿½ï¿½ï¿½
typedef __packed struct
{
	uint8_t dart_belong;		  // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÚµÄ¶ï¿½ï¿½ï¿?: 1ï¿½ï¿½ï¿½ì·½ï¿½ï¿½ï¿½ï¿½  2ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
	uint8_t stage_remaining_time; // ï¿½ï¿½ï¿½ï¿½Ê±Ê£ï¿½ï¿½Ä±ï¿½ï¿½ï¿½Ê±ï¿½ï¿?  /s
} ext_dart_status_t;


typedef __packed struct
{
	uint8_t F1_zone_status : 1;
	uint8_t F1_zone_buff_debuff_status : 3;
	uint8_t F2_zone_status : 1;
	uint8_t F2_zone_buff_debuff_status : 3;
	uint8_t F3_zone_status : 1;
	uint8_t F3_zone_buff_debuff_status : 3;
	uint8_t F4_zone_status : 1;
	uint8_t F4_zone_buff_debuff_status : 3;
	uint8_t F5_zone_status : 1;
	uint8_t F5_zone_buff_debuff_status : 3;
	uint8_t F6_zone_status : 1;
	uint8_t F6_zone_buff_debuff_status : 3;
	uint16_t red1_bullet_left;
	uint16_t red2_bullet_left;
	uint16_t blue1_bullet_left;
	uint16_t blue2_bullet_left;
	uint8_t lurk_mode;
	uint8_t res;
} ext_ICRA_buff_debuff_zone_and_lurk_status_t;

typedef __packed struct
{
	uint32_t event_type;
} ext_event_data_t;


typedef __packed struct
{
	uint8_t supply_projectile_id;
	uint8_t supply_robot_id;
	uint8_t supply_projectile_step;
	uint8_t supply_projectile_num;
} ext_supply_projectile_action_t;


typedef __packed struct
{
	uint8_t supply_projectile_id;
	uint8_t supply_robot_id;
	uint8_t supply_num;
} ext_supply_projectile_booking_t;


typedef __packed struct
{
	uint8_t level;
	uint8_t foul_robot_id;
} ext_referee_warning_t;


typedef __packed struct
{
	uint8_t dart_remaining_time;
} ext_dart_remaining_time_t;


typedef __packed struct
{
	uint8_t robot_id;
	uint8_t robot_level;
	uint16_t remain_HP;
	uint16_t max_HP;
	uint16_t shooter_id1_17mm_cooling_rate;
	uint16_t shooter_id1_17mm_cooling_limit;
	uint16_t shooter_id1_17mm_speed_limit;

	uint16_t shooter_id2_17mm_cooling_rate;
	uint16_t shooter_id2_17mm_cooling_limit;
	uint16_t shooter_id2_17mm_speed_limit;

	uint16_t shooter_id1_42mm_cooling_rate;
	uint16_t shooter_id1_42mm_cooling_limit;
	uint16_t shooter_id1_42mm_speed_limit;

	uint16_t chassis_power_limit;
	uint8_t mains_power_gimbal_output : 1;
	uint8_t mains_power_chassis_output : 1;
	uint8_t mains_power_shooter_output : 1;
} ext_game_robot_status_t;


typedef __packed struct
{
	uint16_t chassis_volt;
	uint16_t chassis_current;
	float chassis_power;
	uint16_t chassis_power_buffer;
	uint16_t shooter_id1_17mm_cooling_heat;
	uint16_t shooter_id2_17mm_cooling_heat;
	uint16_t shooter_id1_42mm_cooling_heat;
} ext_power_heat_data_t;


typedef __packed struct
{
	float x;
	float y;
	float z;
	float yaw;
} ext_game_robot_pos_t;

/*
ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½æ£º0x0204ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½1Hz
bit 0ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ñªï¿½ï¿½ï¿½ï¿½Ñª×´Ì¬
bit 1ï¿½ï¿½Ç¹ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È´ï¿½ï¿½ï¿½ï¿½
bit 2ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ë·ï¿½ï¿½ï¿½ï¿½Ó³ï¿½
bit 3ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ë¹ï¿½ï¿½ï¿½ï¿½Ó³ï¿½
ï¿½ï¿½ï¿½ï¿½ bit ï¿½ï¿½ï¿½ï¿½
*/
typedef __packed struct
{
	uint8_t power_rune_buff;
} ext_buff_t;

/*
ï¿½ï¿½ï¿½Ð»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½×´Ì¬ï¿½ï¿½0x0205ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½10Hz

ï¿½É¹ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ ï¿½ï¿½Î» sï¿½ï¿½30s ï¿½Ý¼ï¿½ï¿½ï¿½ 0

*/
typedef __packed struct
{
	uint8_t attack_time;
} aerial_robot_energy_t;

/*
ï¿½Ëºï¿½×´Ì¬ï¿½ï¿½0x0206ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½ï¿½Ëºï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½

bit 0-3ï¿½ï¿½ï¿½ï¿½Ñªï¿½ï¿½ï¿½ä»¯ï¿½ï¿½ï¿½ï¿½Îª×°ï¿½ï¿½ï¿½Ëºï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½×°ï¿½ï¿½ IDï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÖµÎª 0-4 ï¿½Å´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ëµï¿½
ï¿½ï¿½ï¿½×°ï¿½ï¿½Æ¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ñªï¿½ï¿½ï¿½ä»¯ï¿½ï¿½ï¿½Í£ï¿½ï¿½Ã±ï¿½ï¿½ï¿½ï¿½ï¿½ÖµÎ? 0ï¿½ï¿½
bit 4-7ï¿½ï¿½Ñªï¿½ï¿½ï¿½ä»¯ï¿½ï¿½ï¿½ï¿½

0x0 ×°ï¿½ï¿½ï¿½Ëºï¿½ï¿½ï¿½Ñªï¿½ï¿½
0x1 Ä£ï¿½ï¿½ï¿½ï¿½ß¿ï¿½Ñªï¿½ï¿?
0x2 ï¿½ï¿½ï¿½ï¿½ï¿½Ù¿ï¿½Ñªï¿½ï¿½
0x3 ï¿½ï¿½Ç¹ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ñªï¿½ï¿½
0x4 ï¿½ï¿½ï¿½ï¿½ï¿½Ì¹ï¿½ï¿½Ê¿ï¿½Ñªï¿½ï¿½
0x5 ×°ï¿½ï¿½×²ï¿½ï¿½ï¿½ï¿½Ñª
*/
typedef __packed struct
{
	uint8_t armor_id : 4;
	uint8_t hurt_type : 4;
} ext_robot_hurt_t;

/*
ÊµÊ±ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢ï¿½ï¿?0x0207ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
bullet_type:
ï¿½Óµï¿½ï¿½ï¿½ï¿½ï¿½: 1ï¿½ï¿½17mm ï¿½ï¿½ï¿½ï¿½ 2ï¿½ï¿½42mm ï¿½ï¿½ï¿½ï¿½

shooter_id:
ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿? IDï¿½ï¿½
1ï¿½ï¿½1 ï¿½ï¿½ 17mm ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
2ï¿½ï¿½2 ï¿½ï¿½ 17mm ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
3ï¿½ï¿½42mm ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?

bullet_freq:
ï¿½Óµï¿½ï¿½ï¿½Æµ ï¿½ï¿½Î» Hz

bullet_speed:
ï¿½Óµï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½Î» m/s
*/
typedef __packed struct
{
	uint8_t bullet_type;
	uint8_t shooter_id;
	uint8_t bullet_freq;
	float bullet_speed;
} ext_shoot_data_t;

/*
ï¿½Óµï¿½Ê£ï¿½à·¢ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½0x0208ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½10Hz ï¿½ï¿½ï¿½Ú·ï¿½ï¿½Í£ï¿½
ï¿½ï¿½ï¿½Ð»ï¿½ï¿½ï¿½ï¿½Ë·ï¿½ï¿½ï¿½

bullet_remaining_num_17mm:
17mm ï¿½Óµï¿½Ê£ï¿½à·¢ï¿½ï¿½ï¿½ï¿½Ä¿

bullet_remaining_num_42mm:
42mm ï¿½Óµï¿½Ê£ï¿½à·¢ï¿½ï¿½ï¿½ï¿½Ä¿

coin_remaining_num:
Ê£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½

*/

typedef __packed struct
{
	uint16_t bullet_remaining_num_17mm;
	uint16_t bullet_remaining_num_42mm;
	uint16_t coin_remaining_num;
} ext_bullet_remaining_t;

/*
ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ RFID ×´Ì¬ï¿½ï¿½0x0209ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½3Hzï¿½ï¿½
ï¿½ï¿½ï¿½Í·ï¿½Î§ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½

bit 0ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿? RFID ×´Ì¬ï¿½ï¿½
bit 1ï¿½ï¿½ï¿½ßµï¿½ï¿½ï¿½ï¿½ï¿½ï¿? RFID ×´Ì¬ï¿½ï¿½
bit 2ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ø¼ï¿½ï¿½ï¿½ï¿? RFID ×´Ì¬ï¿½ï¿½
bit 3ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿? RFID ×´Ì¬ï¿½ï¿½
bit 4ï¿½ï¿½Ç°ï¿½Ú¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿? RFID ×´Ì¬ï¿½ï¿½
bit 6ï¿½ï¿½ï¿½ï¿½Ñªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿? RFID ×´Ì¬ï¿½ï¿½
bit 7ï¿½ï¿½ï¿½ï¿½ï¿½Ì»ï¿½ï¿½ï¿½ï¿½Ë¸ï¿½ï¿½î¿¨ RFID ×´Ì¬ï¿½ï¿½
bit 8-31ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½

*/
typedef __packed struct
{
	uint32_t rfid_status;
} ext_rfid_status_t;

/*
ï¿½ï¿½ï¿½Ú»ï¿½ï¿½ï¿½ï¿½Ë¿Í»ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½Ý£ï¿½0x020Aï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æµï¿½Ê£ï¿½10Hzï¿½ï¿½
ï¿½ï¿½ï¿½Í·ï¿½Î§ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½

dart_launch_opening_status:
ï¿½ï¿½Ç°ï¿½ï¿½ï¿½Ú·ï¿½ï¿½ï¿½Úµï¿½×´Ì?
1ï¿½ï¿½ï¿½Ø±Õ£ï¿½
2ï¿½ï¿½ï¿½ï¿½ï¿½Ú¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ß¹Ø±ï¿½ï¿½ï¿½
0ï¿½ï¿½ï¿½Ñ¾ï¿½ï¿½ï¿½ï¿½ï¿½

dart_attack_target:
ï¿½ï¿½ï¿½ÚµÄ´ï¿½ï¿½Ä¿ï¿½ê£¬Ä¬ï¿½ï¿½ÎªÇ°ï¿½ï¿½Õ¾ï¿½ï¿?
0ï¿½ï¿½Ç°ï¿½ï¿½Õ¾ï¿½ï¿½
1ï¿½ï¿½ï¿½ï¿½ï¿½Ø¡ï¿½

target_change_time:
ï¿½Ð»ï¿½ï¿½ï¿½ï¿½Ä¿ï¿½ï¿½Ê±ï¿½Ä±ï¿½ï¿½ï¿½Ê£ï¿½ï¿½Ê±ï¿½ä£¬ï¿½ï¿½Î»ï¿½ë£¬ï¿½ï¿½Î´ï¿½Ð»ï¿½Ä¬ï¿½ï¿½Î? 0ï¿½ï¿½

operate_launch_cmd_time:
ï¿½ï¿½ï¿½Ò»ï¿½Î²ï¿½ï¿½ï¿½ï¿½ï¿½È·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½Ê±ï¿½Ä±ï¿½ï¿½ï¿½Ê£ï¿½ï¿½Ê±ï¿½ä£¬ï¿½ï¿½Î»ï¿½ï¿?, ï¿½ï¿½Ê¼ÖµÎª 0ï¿½ï¿½


*/
typedef __packed struct
{
	uint8_t dart_launch_opening_status;
	uint8_t dart_attack_target;
	uint16_t target_change_time;
	uint16_t operate_launch_cmd_time;
} ext_dart_client_cmd_t;

/*
ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢ï¿½ï¿½0x0301

data_cmd_id:
ï¿½ï¿½ÒªÐ£ï¿½é·¢ï¿½ï¿½ï¿½ßµï¿½ ID ï¿½ï¿½È·ï¿½Ô£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿? 1 ï¿½ï¿½ï¿½Í¸ï¿½ï¿½ï¿½ 5ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Òª
Ð£ï¿½ï¿½ï¿? 1

sender_ID:
ï¿½ï¿½ÒªÐ£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ßµï¿? ID ï¿½ï¿½È·ï¿½Ô£ï¿½ï¿½ï¿½ï¿½ç²»ï¿½Ü·ï¿½ï¿½Íµï¿½ï¿½Ð¶Ô»ï¿½ï¿½ï¿½ï¿½Ëµï¿½ ID

ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý¶ï¿½
*/
// typedef __packed struct
//{
//  uint16_t data_cmd_id;
//  uint16_t sender_ID;
//  uint16_t receiver_ID;
// }ext_student_interactive_header_data_t;



/*
0x0301

*/

// typedef __packed struct
//{
//  uint8_t data[];
// } robot_interactive_data_t;

// 0x0301

typedef __packed struct
{
	uint8_t operate_tpye;
	uint8_t layer;
} ext_client_custom_graphic_delete_t;

// Í¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
typedef __packed struct
{
	uint8_t graphic_name[3];
	uint32_t operate_tpye : 3;
	uint32_t graphic_tpye : 3;
	uint32_t layer : 4;
	uint32_t color : 4;
	uint32_t start_angle : 9;
	uint32_t end_angle : 9;
	uint32_t width : 10;
	uint32_t start_x : 11;
	uint32_t start_y : 11;
	uint32_t radius : 10;
	uint32_t end_x : 11;
	uint32_t end_y : 11;
} graphic_data_struct_t;

// 0x0301
typedef __packed struct
{
	graphic_data_struct_t grapic_data_struct;
} ext_client_custom_graphic_single_t;

// 0x0301
typedef __packed struct
{
	graphic_data_struct_t grapic_data_struct[2];
} ext_client_custom_graphic_double_t;

// 0x0301
typedef __packed struct
{
	graphic_data_struct_t grapic_data_struct[5];
} ext_client_custom_graphic_five_t;

// 0x0301
typedef __packed struct
{
	graphic_data_struct_t grapic_data_struct[7];
} ext_client_custom_graphic_seven_t;

typedef __packed struct
{
	graphic_data_struct_t grapic_data_struct;
	uint8_t data[30];
} ext_client_custom_character_t;

// 0x0302
typedef __packed struct
{
	uint8_t *data;
} robot_interactive_data_t;

// 0x0303

// typedef __packed struct
//{
// float target_position_x;
// float target_position_y;
// float target_position_z;
// uint8_t commd_keyboard;
// uint16_t target_robot_ID;
// } ext_robot_command_t;

typedef __packed struct
{
	uint16_t target_robot_ID;
	float target_position_x;
	float target_position_y;
} ext_client_map_command_t;

// 0x0304

typedef __packed struct
{
	int16_t mouse_x;
	int16_t mouse_y;
	int16_t mouse_z;
	int8_t left_button_down;
	int8_t right_button_down;
	uint16_t keyboard_value;
	uint16_t reserved;
} ext_robot_command_t;

// 0x301
typedef __packed struct
{
	uint16_t data_cmd_id;
	uint16_t sender_ID;
	uint16_t receiver_ID;
} ext_student_interactive_header_data_t;
// »æÖÆÎÄ×Ö
typedef __packed struct
{
	uint16_t data_cmd_id;
	uint16_t sender_ID;
	uint16_t receiver_ID;
	ext_client_custom_character_t character;
} ext_student_interactive_header_word_t;

// »æÖÆÍ¼
typedef __packed struct
{
	uint16_t data_cmd_id;
	uint16_t sender_ID;
	uint16_t receiver_ID;
	ext_client_custom_graphic_seven_t graphic;
} ext_student_interactive_header_graph_t;

typedef struct
{
	Frame_Header_t Frame_Header;
	uint16_t cmd_id;

	ext_game_status_t ext_game_status;	   // 0x0001
	ext_game_result_t ext_game_result;	   // 0x0002
	ext_game_robot_HP_t ext_game_robot_HP; // 0x0003
	ext_dart_status_t ext_dart_status;	   // 0x0004

	ext_ICRA_buff_debuff_zone_and_lurk_status_t ext_ICRA_buff_debuff_zone_and_lurk_status; // 0x005
	ext_event_data_t ext_event_data;													   // 0x0101
	ext_supply_projectile_action_t ext_supply_projectile_action;						   // 0x0102
	ext_supply_projectile_booking_t ext_supply_projectile_booking;						   // 0x0103
	ext_referee_warning_t ext_referee_warning;											   // 0x0104
	ext_dart_remaining_time_t ext_dart_remaining_time;									   // 0x0105

	ext_game_robot_status_t ext_game_robot_status; //  0x201
	ext_power_heat_data_t ext_power_heat_data;	   //  0x0202
	ext_game_robot_pos_t ext_game_robot_pos;	   // 0x203
	ext_buff_t ext_buff;						   // 0x204

	aerial_robot_energy_t aerial_robot_energy;	 // 0x205
	ext_robot_hurt_t ext_robot_hurt;			 // 0x206
	ext_shoot_data_t ext_shoot_data;			 // 0x207
	ext_bullet_remaining_t ext_bullet_remaining; // 0x208
	ext_rfid_status_t ext_rfid_status;			 //  0x209
	ext_dart_client_cmd_t ext_dart_client_cmd;	 // 0x20A

	ext_student_interactive_header_data_t ext_student_interactive_header_data; // 0x301

} JudgementDataTypedef;

extern JudgementDataTypedef JudgeStructure;
extern uint8_t JudgeDataBuffer[JudgeBufferLength];

#endif
